{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/MovieZone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport LightRays from \"./LightRays\";\nimport \"./App.css\";\nimport MovieTemplate from \"./MovieTemplate\";\nimport WishlistPage from \"./WishlistPage\";\nimport MovieDetailPage from \"./MovieDetailPage\"; // Import the new component\nimport Auth from \"./components/Auth\";\nimport { authService } from \"./services/authService\";\nimport TextPressure from \"./TextPressure\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = \"397abbabeb0c47f060cf654d072c0c15\";\nconst TMDB_BASE_URL = \"https://api.themoviedb.org/3\";\nconst App = () => {\n  _s();\n  const [wishlist, setWishlist] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showRecent, setShowRecent] = useState(false);\n  const [filters, setFilters] = useState({\n    actorDirector: \"\",\n    year: \"\",\n    genre: \"\",\n    ratings: \"\"\n  });\n  const [genresList, setGenresList] = useState([]);\n  const [suggestedMovies, setSuggestedMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isCheckingAuth, setIsCheckingAuth] = useState(true);\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const existingUser = authService.getCurrentUser();\n    setCurrentUser(existingUser);\n    setIsCheckingAuth(false);\n  }, []);\n\n  // Fetch genres list first, then popular movies\n  useEffect(() => {\n    fetchGenresList();\n  }, []);\n\n  // Fetch popular movies when genres are loaded\n  useEffect(() => {\n    if (genresList.length > 0) {\n      fetchPopularMovies();\n    }\n  }, [genresList]);\n  useEffect(() => {\n    if (showRecent && genresList.length > 0) {\n      fetchPopularMovies();\n    }\n  }, [showRecent]);\n\n  // Fetch genres list from TMDB\n  const fetchGenresList = async () => {\n    try {\n      const response = await fetch(`${TMDB_BASE_URL}/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`);\n      const data = await response.json();\n      if (data.genres) {\n        setGenresList(data.genres);\n      }\n    } catch (err) {\n      console.error(\"Error fetching genres list:\", err);\n    }\n  };\n\n  // Fetch movies filtered by server-side filters\n  const fetchFilteredMovies = async filters => {\n    setLoading(true);\n    setError(null);\n    try {\n      let actorDirectorId = null;\n      if (filters.actorDirector.trim() !== \"\") {\n        // Search person by name to get ID\n        const personResponse = await fetch(`${TMDB_BASE_URL}/search/person?api_key=${TMDB_API_KEY}&language=en-US&query=${encodeURIComponent(filters.actorDirector.trim())}&page=1&include_adult=false`);\n        const personData = await personResponse.json();\n        if (personData.results && personData.results.length > 0) {\n          actorDirectorId = personData.results[0].id;\n        } else {\n          setError(\"No actor/director found with that name.\");\n          setSuggestedMovies([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Map genre name to genre ID\n      let genreId = null;\n      if (filters.genre.trim() !== \"\") {\n        const genreObj = genresList.find(g => g.name.toLowerCase() === filters.genre.trim().toLowerCase());\n        if (genreObj) {\n          genreId = genreObj.id;\n        } else {\n          setError(\"Genre not found.\");\n          setSuggestedMovies([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Build query parameters\n      const params = new URLSearchParams();\n      params.append(\"api_key\", TMDB_API_KEY);\n      params.append(\"language\", \"en-US\");\n      params.append(\"page\", \"1\");\n      if (filters.year.trim() !== \"\") {\n        params.append(\"primary_release_year\", filters.year.trim());\n      }\n      if (genreId) {\n        params.append(\"with_genres\", genreId);\n      }\n      if (actorDirectorId) {\n        params.append(\"with_cast\", actorDirectorId);\n      }\n\n      // Fetch movies with filters\n      const url = `${TMDB_BASE_URL}/discover/movie?${params.toString()}`;\n      console.log(\"Fetching movies with URL:\", url);\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"Filtered movies response:\", data);\n      if (data.results) {\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map(movie => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids.map(id => genresList.find(g => g.id === id)).filter(Boolean);\n            return {\n              ...movie,\n              genres\n            };\n          }\n          return movie;\n        });\n\n        // Filter by ratings client-side if needed\n        let filteredMovies = moviesWithGenres;\n        if (filters.ratings.trim() !== \"\") {\n          const ratingNum = parseFloat(filters.ratings);\n          if (!isNaN(ratingNum)) {\n            filteredMovies = filteredMovies.filter(movie => movie.vote_average && movie.vote_average >= ratingNum);\n          }\n        }\n\n        // Fetch credits for each movie to get director info\n        const moviesWithCredits = await Promise.all(filteredMovies.map(async movie => {\n          const credits = await fetchMovieCredits(movie.id);\n          return {\n            ...movie,\n            credits\n          };\n        }));\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"No movies found with the given filters.\");\n        setSuggestedMovies([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching filtered movies:\", err);\n      setError(\"Error fetching filtered movies.\");\n      setSuggestedMovies([]);\n    }\n    setLoading(false);\n  };\n\n  // Fetch popular movies from TMDB\n  const fetchPopularMovies = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Fetching popular movies with genres list:', genresList.length);\n      const response = await fetch(`${TMDB_BASE_URL}/movie/popular?api_key=${TMDB_API_KEY}&language=en-US&page=1`);\n      const data = await response.json();\n      if (data.results) {\n        var _data$results$;\n        console.log('First movie genre_ids:', (_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.genre_ids);\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map(movie => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids.map(id => genresList.find(g => g.id === id)).filter(Boolean);\n            console.log(`Movie ${movie.title} genres:`, genres);\n            return {\n              ...movie,\n              genres\n            };\n          }\n          console.log(`Movie ${movie.title} - no genres mapped`);\n          return movie;\n        });\n        // Fetch credits for each movie to get director info\n        const moviesWithCredits = await Promise.all(moviesWithGenres.map(async movie => {\n          const credits = await fetchMovieCredits(movie.id);\n          return {\n            ...movie,\n            credits\n          };\n        }));\n        setMovies(moviesWithCredits);\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"Failed to fetch popular movies.\");\n      }\n    } catch (err) {\n      setError(\"Error fetching popular movies.\");\n    }\n    setLoading(false);\n  };\n\n  // Fetch movie credits (cast and crew) by movie ID\n  const fetchMovieCredits = async movieId => {\n    try {\n      const response = await fetch(`${TMDB_BASE_URL}/movie/${movieId}/credits?api_key=${TMDB_API_KEY}`);\n      const data = await response.json();\n      return data;\n    } catch {\n      return null;\n    }\n  };\n\n  // Search movies by name using TMDB search API\n  const searchMovies = async query => {\n    if (!query) {\n      setSuggestedMovies([]);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${TMDB_BASE_URL}/search/movie?api_key=${TMDB_API_KEY}&language=en-US&query=${encodeURIComponent(query)}&page=1&include_adult=false`);\n      const data = await response.json();\n      if (data.results) {\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map(movie => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids.map(id => genresList.find(g => g.id === id)).filter(Boolean);\n            return {\n              ...movie,\n              genres\n            };\n          }\n          return movie;\n        });\n        // Fetch credits for each movie\n        const moviesWithCredits = await Promise.all(moviesWithGenres.map(async movie => {\n          const credits = await fetchMovieCredits(movie.id);\n          return {\n            ...movie,\n            credits\n          };\n        }));\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"No movies found.\");\n        setSuggestedMovies([]);\n      }\n    } catch (err) {\n      setError(\"Error searching movies.\");\n      setSuggestedMovies([]);\n    }\n    setLoading(false);\n  };\n\n  // Handle search by movie name\n  const handleSearch = () => {\n    setShowRecent(false);\n    searchMovies(searchQuery);\n  };\n\n  // Handle Recent button toggle\n  const handleRecent = () => {\n    setSearchQuery(\"\");\n    setFilters({\n      actorDirector: \"\",\n      year: \"\",\n      genre: \"\",\n      ratings: \"\"\n    });\n    setShowRecent(true);\n  };\n\n  // Handle input change for filters\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(`Filter input changed: ${name} = ${value}`);\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Filter movies based on filters locally (since TMDB API does not support all filters directly)\n  const filterMovies = moviesList => {\n    let filtered = moviesList;\n    if (filters.actorDirector.trim() !== \"\") {\n      filtered = filtered.filter(movie => {\n        if (!movie.credits || !movie.credits.crew) return false;\n        const directors = movie.credits.crew.filter(c => c.job === \"Director\");\n        return directors.some(d => d.name.toLowerCase().includes(filters.actorDirector.toLowerCase()));\n      });\n    }\n    if (filters.year.trim() !== \"\") {\n      filtered = filtered.filter(movie => {\n        if (!movie.release_date) return false;\n        return movie.release_date.startsWith(filters.year);\n      });\n    }\n    if (filters.genre.trim() !== \"\") {\n      filtered = filtered.filter(movie => {\n        if (!movie.genre_ids && !movie.genres) {\n          // fallback to genres array if available\n          if (movie.genres) {\n            return movie.genres.some(g => g.name.toLowerCase().includes(filters.genre.toLowerCase()));\n          }\n          return false;\n        }\n        // genre_ids filtering is limited without genre mapping, so fallback to genres if available\n        return false;\n      });\n    }\n    if (filters.ratings.trim() !== \"\") {\n      const ratingNum = parseFloat(filters.ratings);\n      if (!isNaN(ratingNum)) {\n        filtered = filtered.filter(movie => movie.vote_average && movie.vote_average >= ratingNum);\n      }\n    }\n    return filtered;\n  };\n\n  // Handle Give Suggestion button\n  const handleSuggestion = () => {\n    setShowRecent(false);\n    // Filter from the original movies list to avoid cumulative filtering\n    const filtered = filterMovies(movies);\n    setSuggestedMovies(filtered);\n  };\n\n  // Handle Enter key for search and suggestion inputs\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      if (document.activeElement.name === \"search\") {\n        handleSearch();\n      } else {\n        // Trigger server-side filtering on Enter in filter inputs\n        setShowRecent(false);\n        fetchFilteredMovies(filters);\n      }\n    }\n  };\n\n  // Toggle wishlist function\n  const toggleWishlist = movie => {\n    console.log(\"Toggling wishlist for movie:\", movie.title);\n    setWishlist(prev => {\n      const isInWishlist = prev.some(m => m.id === movie.id);\n      return isInWishlist ? prev.filter(m => m.id !== movie.id) : [...prev, movie];\n    });\n  };\n\n  // Handle successful authentication\n  const handleAuthSuccess = user => {\n    setCurrentUser(user);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    authService.signOut();\n    setCurrentUser(null);\n  };\n\n  // Show loading while checking authentication\n  if (isCheckingAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show Auth component if user is not authenticated\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(LightRays, {\n        raysOrigin: \"top-center\",\n        raysColor: \"#00ffff\",\n        raysSpeed: 1.5,\n        lightSpread: 0.8,\n        rayLength: 1.2,\n        followMouse: true,\n        mouseInfluence: 0.1,\n        noiseAmount: 0.1,\n        distortion: 0.05,\n        className: \"background-rays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {\n        onAuthSuccess: handleAuthSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(LightRays, {\n        raysOrigin: \"top-center\",\n        raysColor: \"#00ffff\",\n        raysSpeed: 1.5,\n        lightSpread: 0.8,\n        rayLength: 1.2,\n        followMouse: true,\n        mouseInfluence: 0.1,\n        noiseAmount: 0.1,\n        distortion: 0.05,\n        className: \"background-rays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav-tabs\",\n          style: {\n            justifyContent: 'flex-end'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '15px',\n            zIndex: 1000\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'white',\n              fontWeight: 'bold'\n            },\n            children: [\"Welcome, \", currentUser.username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            style: {\n              padding: '10px 20px',\n              fontWeight: '600',\n              borderRadius: '8px',\n              background: 'linear-gradient(135deg, #00ffff, #0099cc)',\n              border: '1px solid #00ffff',\n              color: '#000000',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontFamily: 'Inter, system-ui, sans-serif',\n              boxShadow: '0 0 15px rgba(0, 255, 255, 0.4)',\n              transition: 'all 0.3s ease',\n              transform: 'translateY(0)',\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px'\n            },\n            onMouseEnter: e => {\n              e.target.style.transform = 'translateY(-2px)';\n              e.target.style.boxShadow = '0 0 25px rgba(0, 255, 255, 0.6)';\n              e.target.style.background = 'linear-gradient(135deg, #00cccc, #007799)';\n            },\n            onMouseLeave: e => {\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = '0 0 15px rgba(0, 255, 255, 0.4)';\n              e.target.style.background = 'linear-gradient(135deg, #00ffff, #0099cc)';\n            },\n            children: \"\\uD83D\\uDEAA Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '10px',\n            left: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/wishlist\",\n            style: {\n              padding: '10px 20px',\n              fontWeight: '600',\n              borderRadius: '8px',\n              background: 'rgba(0, 255, 255, 0.1)',\n              border: '1px solid #00ffff',\n              color: '#00ffff',\n              textDecoration: 'none',\n              fontSize: '14px',\n              fontFamily: 'Inter, system-ui, sans-serif',\n              boxShadow: '0 0 15px rgba(0, 255, 255, 0.3)',\n              transition: 'all 0.3s ease',\n              transform: 'translateY(0)',\n              display: 'inline-flex',\n              alignItems: 'center',\n              gap: '6px',\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              backdropFilter: 'blur(10px)'\n            },\n            onMouseEnter: e => {\n              e.target.style.transform = 'translateY(-2px)';\n              e.target.style.boxShadow = '0 0 25px rgba(0, 255, 255, 0.5)';\n              e.target.style.background = 'rgba(0, 255, 255, 0.2)';\n            },\n            onMouseLeave: e => {\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = '0 0 15px rgba(0, 255, 255, 0.3)';\n              e.target.style.background = 'rgba(0, 255, 255, 0.1)';\n            },\n            children: [\"\\u2764\\uFE0F Wishlist (\", wishlist.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '30px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            width: '400px',\n            height: '50px',\n            zIndex: 999\n          },\n          children: /*#__PURE__*/_jsxDEV(TextPressure, {\n            text: \"MovieZone\",\n            flex: true,\n            alpha: false,\n            stroke: false,\n            width: true,\n            weight: true,\n            italic: true,\n            textColor: \"#ffffff\",\n            strokeColor: \"#ff0000\",\n            minFontSize: 36\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          style: {\n            marginTop: '80px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"search\",\n            placeholder: \"Search by movie name...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            onKeyDown: handleKeyDown,\n            className: \"search-input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filters-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"actorDirector\",\n                    children: \"Actor/Director:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"actorDirector\",\n                    name: \"actorDirector\",\n                    value: filters.actorDirector,\n                    onChange: handleFilterChange,\n                    onKeyDown: handleKeyDown,\n                    className: \"filter-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"year\",\n                    children: \"Year:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"year\",\n                    name: \"year\",\n                    value: filters.year,\n                    onChange: handleFilterChange,\n                    onKeyDown: handleKeyDown,\n                    className: \"filter-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"genre\",\n                    children: \"Genre:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"genre\",\n                    name: \"genre\",\n                    value: filters.genre,\n                    onChange: handleFilterChange,\n                    onKeyDown: handleKeyDown,\n                    className: \"filter-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"ratings\",\n                    children: \"Ratings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"ratings\",\n                    name: \"ratings\",\n                    min: \"1\",\n                    max: \"10\",\n                    step: \"0.1\",\n                    value: filters.ratings,\n                    onChange: handleFilterChange,\n                    onKeyDown: handleKeyDown,\n                    className: \"filter-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"suggestion-button\",\n                  onClick: () => {\n                    setShowRecent(false);\n                    fetchFilteredMovies(filters);\n                  },\n                  children: \"Give Suggestion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"movies-display\",\n                children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading movies...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this) : suggestedMovies.length > 0 ? suggestedMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieTemplate, {\n                  movie: movie,\n                  wishlist: wishlist,\n                  toggleWishlist: toggleWishlist\n                }, movie.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-results\",\n                  children: \"No movies to display.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wishlist\",\n            element: /*#__PURE__*/_jsxDEV(WishlistPage, {\n              wishlist: wishlist,\n              toggleWishlist: toggleWishlist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:movieId\",\n            element: /*#__PURE__*/_jsxDEV(MovieDetailPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gV2NZHaYFq78SacqScogMAaxn4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","LightRays","MovieTemplate","WishlistPage","MovieDetailPage","Auth","authService","TextPressure","jsxDEV","_jsxDEV","TMDB_API_KEY","TMDB_BASE_URL","App","_s","wishlist","setWishlist","movies","setMovies","searchQuery","setSearchQuery","showRecent","setShowRecent","filters","setFilters","actorDirector","year","genre","ratings","genresList","setGenresList","suggestedMovies","setSuggestedMovies","loading","setLoading","error","setError","currentUser","setCurrentUser","isCheckingAuth","setIsCheckingAuth","existingUser","getCurrentUser","fetchGenresList","length","fetchPopularMovies","response","fetch","data","json","genres","err","console","fetchFilteredMovies","actorDirectorId","trim","personResponse","encodeURIComponent","personData","results","id","genreId","genreObj","find","g","name","toLowerCase","params","URLSearchParams","append","url","toString","log","moviesWithGenres","map","movie","genre_ids","filter","Boolean","filteredMovies","ratingNum","parseFloat","isNaN","vote_average","moviesWithCredits","Promise","all","credits","fetchMovieCredits","_data$results$","title","movieId","searchMovies","query","handleSearch","handleRecent","handleFilterChange","e","value","target","prev","filterMovies","moviesList","filtered","crew","directors","c","job","some","d","includes","release_date","startsWith","handleSuggestion","handleKeyDown","key","document","activeElement","toggleWishlist","isInWishlist","m","handleAuthSuccess","user","handleLogout","signOut","style","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","className","raysOrigin","raysColor","raysSpeed","lightSpread","rayLength","followMouse","mouseInfluence","noiseAmount","distortion","onAuthSuccess","position","top","right","gap","zIndex","color","fontWeight","username","onClick","padding","borderRadius","background","border","cursor","fontSize","fontFamily","boxShadow","transition","transform","textTransform","letterSpacing","onMouseEnter","onMouseLeave","left","to","textDecoration","backdropFilter","width","text","flex","alpha","stroke","weight","italic","textColor","strokeColor","minFontSize","marginTop","type","placeholder","onChange","onKeyDown","autoComplete","path","element","htmlFor","min","max","step","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/MovieZone/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport LightRays from \"./LightRays\";\nimport \"./App.css\";\nimport MovieTemplate from \"./MovieTemplate\";\nimport WishlistPage from \"./WishlistPage\";\nimport MovieDetailPage from \"./MovieDetailPage\"; // Import the new component\nimport Auth from \"./components/Auth\";\nimport { authService } from \"./services/authService\";\nimport TextPressure from \"./TextPressure\";\n\nconst TMDB_API_KEY = \"397abbabeb0c47f060cf654d072c0c15\";\nconst TMDB_BASE_URL = \"https://api.themoviedb.org/3\";\n\nconst App = () => {\n  const [wishlist, setWishlist] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showRecent, setShowRecent] = useState(false);\n  const [filters, setFilters] = useState({\n    actorDirector: \"\",\n    year: \"\",\n    genre: \"\",\n    ratings: \"\",\n  });\n  const [genresList, setGenresList] = useState([]);\n  const [suggestedMovies, setSuggestedMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isCheckingAuth, setIsCheckingAuth] = useState(true);\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const existingUser = authService.getCurrentUser();\n    setCurrentUser(existingUser);\n    setIsCheckingAuth(false);\n  }, []);\n\n  // Fetch genres list first, then popular movies\n  useEffect(() => {\n    fetchGenresList();\n  }, []);\n\n  // Fetch popular movies when genres are loaded\n  useEffect(() => {\n    if (genresList.length > 0) {\n      fetchPopularMovies();\n    }\n  }, [genresList]);\n\n  useEffect(() => {\n    if (showRecent && genresList.length > 0) {\n      fetchPopularMovies();\n    }\n  }, [showRecent]);\n\n  // Fetch genres list from TMDB\n  const fetchGenresList = async () => {\n    try {\n      const response = await fetch(\n        `${TMDB_BASE_URL}/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`\n      );\n      const data = await response.json();\n      if (data.genres) {\n        setGenresList(data.genres);\n      }\n    } catch (err) {\n      console.error(\"Error fetching genres list:\", err);\n    }\n  };\n\n  // Fetch movies filtered by server-side filters\n  const fetchFilteredMovies = async (filters) => {\n    setLoading(true);\n    setError(null);\n    try {\n      let actorDirectorId = null;\n      if (filters.actorDirector.trim() !== \"\") {\n        // Search person by name to get ID\n        const personResponse = await fetch(\n          `${TMDB_BASE_URL}/search/person?api_key=${TMDB_API_KEY}&language=en-US&query=${encodeURIComponent(\n            filters.actorDirector.trim()\n          )}&page=1&include_adult=false`\n        );\n        const personData = await personResponse.json();\n        if (personData.results && personData.results.length > 0) {\n          actorDirectorId = personData.results[0].id;\n        } else {\n          setError(\"No actor/director found with that name.\");\n          setSuggestedMovies([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Map genre name to genre ID\n      let genreId = null;\n      if (filters.genre.trim() !== \"\") {\n        const genreObj = genresList.find(\n          (g) => g.name.toLowerCase() === filters.genre.trim().toLowerCase()\n        );\n        if (genreObj) {\n          genreId = genreObj.id;\n        } else {\n          setError(\"Genre not found.\");\n          setSuggestedMovies([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Build query parameters\n      const params = new URLSearchParams();\n      params.append(\"api_key\", TMDB_API_KEY);\n      params.append(\"language\", \"en-US\");\n      params.append(\"page\", \"1\");\n      if (filters.year.trim() !== \"\") {\n        params.append(\"primary_release_year\", filters.year.trim());\n      }\n      if (genreId) {\n        params.append(\"with_genres\", genreId);\n      }\n      if (actorDirectorId) {\n        params.append(\"with_cast\", actorDirectorId);\n      }\n\n      // Fetch movies with filters\n      const url = `${TMDB_BASE_URL}/discover/movie?${params.toString()}`;\n      console.log(\"Fetching movies with URL:\", url);\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"Filtered movies response:\", data);\n\n      if (data.results) {\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map((movie) => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids\n              .map((id) => genresList.find((g) => g.id === id))\n              .filter(Boolean);\n            return { ...movie, genres };\n          }\n          return movie;\n        });\n\n        // Filter by ratings client-side if needed\n        let filteredMovies = moviesWithGenres;\n        if (filters.ratings.trim() !== \"\") {\n          const ratingNum = parseFloat(filters.ratings);\n          if (!isNaN(ratingNum)) {\n            filteredMovies = filteredMovies.filter(\n              (movie) => movie.vote_average && movie.vote_average >= ratingNum\n            );\n          }\n        }\n\n        // Fetch credits for each movie to get director info\n        const moviesWithCredits = await Promise.all(\n          filteredMovies.map(async (movie) => {\n            const credits = await fetchMovieCredits(movie.id);\n            return { ...movie, credits };\n          })\n        );\n\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"No movies found with the given filters.\");\n        setSuggestedMovies([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching filtered movies:\", err);\n      setError(\"Error fetching filtered movies.\");\n      setSuggestedMovies([]);\n    }\n    setLoading(false);\n  };\n\n  // Fetch popular movies from TMDB\n  const fetchPopularMovies = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Fetching popular movies with genres list:', genresList.length);\n      const response = await fetch(\n        `${TMDB_BASE_URL}/movie/popular?api_key=${TMDB_API_KEY}&language=en-US&page=1`\n      );\n      const data = await response.json();\n      if (data.results) {\n        console.log('First movie genre_ids:', data.results[0]?.genre_ids);\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map((movie) => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids\n              .map((id) => genresList.find((g) => g.id === id))\n              .filter(Boolean);\n            console.log(`Movie ${movie.title} genres:`, genres);\n            return { ...movie, genres };\n          }\n          console.log(`Movie ${movie.title} - no genres mapped`);\n          return movie;\n        });\n        // Fetch credits for each movie to get director info\n        const moviesWithCredits = await Promise.all(\n          moviesWithGenres.map(async (movie) => {\n            const credits = await fetchMovieCredits(movie.id);\n            return { ...movie, credits };\n          })\n        );\n        setMovies(moviesWithCredits);\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"Failed to fetch popular movies.\");\n      }\n    } catch (err) {\n      setError(\"Error fetching popular movies.\");\n    }\n    setLoading(false);\n  };\n\n  // Fetch movie credits (cast and crew) by movie ID\n  const fetchMovieCredits = async (movieId) => {\n    try {\n      const response = await fetch(\n        `${TMDB_BASE_URL}/movie/${movieId}/credits?api_key=${TMDB_API_KEY}`\n      );\n      const data = await response.json();\n      return data;\n    } catch {\n      return null;\n    }\n  };\n\n  // Search movies by name using TMDB search API\n  const searchMovies = async (query) => {\n    if (!query) {\n      setSuggestedMovies([]);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        `${TMDB_BASE_URL}/search/movie?api_key=${TMDB_API_KEY}&language=en-US&query=${encodeURIComponent(\n          query\n        )}&page=1&include_adult=false`\n      );\n      const data = await response.json();\n      if (data.results) {\n        // Map genre_ids to genres array with names\n        const moviesWithGenres = data.results.map((movie) => {\n          if (movie.genre_ids && genresList.length > 0) {\n            const genres = movie.genre_ids\n              .map((id) => genresList.find((g) => g.id === id))\n              .filter(Boolean);\n            return { ...movie, genres };\n          }\n          return movie;\n        });\n        // Fetch credits for each movie\n        const moviesWithCredits = await Promise.all(\n          moviesWithGenres.map(async (movie) => {\n            const credits = await fetchMovieCredits(movie.id);\n            return { ...movie, credits };\n          })\n        );\n        setSuggestedMovies(moviesWithCredits);\n      } else {\n        setError(\"No movies found.\");\n        setSuggestedMovies([]);\n      }\n    } catch (err) {\n      setError(\"Error searching movies.\");\n      setSuggestedMovies([]);\n    }\n    setLoading(false);\n  };\n\n  // Handle search by movie name\n  const handleSearch = () => {\n    setShowRecent(false);\n    searchMovies(searchQuery);\n  };\n\n  // Handle Recent button toggle\n  const handleRecent = () => {\n    setSearchQuery(\"\");\n    setFilters({\n      actorDirector: \"\",\n      year: \"\",\n      genre: \"\",\n      ratings: \"\",\n    });\n    setShowRecent(true);\n  };\n\n  // Handle input change for filters\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    console.log(`Filter input changed: ${name} = ${value}`);\n    setFilters((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Filter movies based on filters locally (since TMDB API does not support all filters directly)\n  const filterMovies = (moviesList) => {\n    let filtered = moviesList;\n\n    if (filters.actorDirector.trim() !== \"\") {\n      filtered = filtered.filter((movie) => {\n        if (!movie.credits || !movie.credits.crew) return false;\n        const directors = movie.credits.crew.filter((c) => c.job === \"Director\");\n        return directors.some((d) =>\n          d.name.toLowerCase().includes(filters.actorDirector.toLowerCase())\n        );\n      });\n    }\n\n    if (filters.year.trim() !== \"\") {\n      filtered = filtered.filter((movie) => {\n        if (!movie.release_date) return false;\n        return movie.release_date.startsWith(filters.year);\n      });\n    }\n\n    if (filters.genre.trim() !== \"\") {\n      filtered = filtered.filter((movie) => {\n        if (!movie.genre_ids && !movie.genres) {\n          // fallback to genres array if available\n          if (movie.genres) {\n            return movie.genres.some((g) =>\n              g.name.toLowerCase().includes(filters.genre.toLowerCase())\n            );\n          }\n          return false;\n        }\n        // genre_ids filtering is limited without genre mapping, so fallback to genres if available\n        return false;\n      });\n    }\n\n    if (filters.ratings.trim() !== \"\") {\n      const ratingNum = parseFloat(filters.ratings);\n      if (!isNaN(ratingNum)) {\n        filtered = filtered.filter(\n          (movie) => movie.vote_average && movie.vote_average >= ratingNum\n        );\n      }\n    }\n\n    return filtered;\n  };\n\n  // Handle Give Suggestion button\n  const handleSuggestion = () => {\n    setShowRecent(false);\n    // Filter from the original movies list to avoid cumulative filtering\n    const filtered = filterMovies(movies);\n    setSuggestedMovies(filtered);\n  };\n\n  // Handle Enter key for search and suggestion inputs\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      if (document.activeElement.name === \"search\") {\n        handleSearch();\n      } else {\n        // Trigger server-side filtering on Enter in filter inputs\n        setShowRecent(false);\n        fetchFilteredMovies(filters);\n      }\n    }\n  };\n\n  // Toggle wishlist function\n  const toggleWishlist = (movie) => {\n    console.log(\"Toggling wishlist for movie:\", movie.title);\n    setWishlist((prev) => {\n      const isInWishlist = prev.some((m) => m.id === movie.id);\n      return isInWishlist ? prev.filter((m) => m.id !== movie.id) : [...prev, movie];\n    });\n  };\n\n  // Handle successful authentication\n  const handleAuthSuccess = (user) => {\n    setCurrentUser(user);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    authService.signOut();\n    setCurrentUser(null);\n  };\n\n  // Show loading while checking authentication\n  if (isCheckingAuth) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  // Show Auth component if user is not authenticated\n  if (!currentUser) {\n    return (\n      <div className=\"app-container\">\n        <LightRays\n          raysOrigin=\"top-center\"\n          raysColor=\"#00ffff\"\n          raysSpeed={1.5}\n          lightSpread={0.8}\n          rayLength={1.2}\n          followMouse={true}\n          mouseInfluence={0.1}\n          noiseAmount={0.1}\n          distortion={0.05}\n          className=\"background-rays\"\n        />\n        <Auth onAuthSuccess={handleAuthSuccess} />\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <LightRays\n          raysOrigin=\"top-center\"\n          raysColor=\"#00ffff\"\n          raysSpeed={1.5}\n          lightSpread={0.8}\n          rayLength={1.2}\n          followMouse={true}\n          mouseInfluence={0.1}\n          noiseAmount={0.1}\n          distortion={0.05}\n          className=\"background-rays\"\n        />\n        <header className=\"header\">\n          <nav className=\"nav-tabs\" style={{ justifyContent: 'flex-end' }}>\n            {/* Removed Home link */}\n          </nav>\n          {/* User info and logout button - positioned at top-right corner */}\n          <div style={{ \n            position: 'absolute', \n            top: '10px', \n            right: '10px', \n            display: 'flex', \n            alignItems: 'center', \n            gap: '15px',\n            zIndex: 1000\n          }}>\n            <span style={{ color: 'white', fontWeight: 'bold' }}>\n              Welcome, {currentUser.username}!\n            </span>\n            <button\n              onClick={handleLogout}\n              style={{ \n                padding: '10px 20px', \n                fontWeight: '600', \n                borderRadius: '8px', \n                background: 'linear-gradient(135deg, #00ffff, #0099cc)', \n                border: '1px solid #00ffff',\n                color: '#000000',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontFamily: 'Inter, system-ui, sans-serif',\n                boxShadow: '0 0 15px rgba(0, 255, 255, 0.4)',\n                transition: 'all 0.3s ease',\n                transform: 'translateY(0)',\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.transform = 'translateY(-2px)';\n                e.target.style.boxShadow = '0 0 25px rgba(0, 255, 255, 0.6)';\n                e.target.style.background = 'linear-gradient(135deg, #00cccc, #007799)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 0 15px rgba(0, 255, 255, 0.4)';\n                e.target.style.background = 'linear-gradient(135deg, #00ffff, #0099cc)';\n              }}\n            >\n              🚪 Logout\n            </button>\n          </div>\n          <div style={{ position: 'absolute', top: '10px', left: '10px' }}>\n            <Link\n              to=\"/wishlist\"\n              style={{ \n                padding: '10px 20px', \n                fontWeight: '600', \n                borderRadius: '8px', \n                background: 'rgba(0, 255, 255, 0.1)', \n                border: '1px solid #00ffff', \n                color: '#00ffff',\n                textDecoration: 'none',\n                fontSize: '14px',\n                fontFamily: 'Inter, system-ui, sans-serif',\n                boxShadow: '0 0 15px rgba(0, 255, 255, 0.3)',\n                transition: 'all 0.3s ease',\n                transform: 'translateY(0)',\n                display: 'inline-flex',\n                alignItems: 'center',\n                gap: '6px',\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px',\n                backdropFilter: 'blur(10px)'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.transform = 'translateY(-2px)';\n                e.target.style.boxShadow = '0 0 25px rgba(0, 255, 255, 0.5)';\n                e.target.style.background = 'rgba(0, 255, 255, 0.2)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 0 15px rgba(0, 255, 255, 0.3)';\n                e.target.style.background = 'rgba(0, 255, 255, 0.1)';\n              }}\n            >\n              ❤️ Wishlist ({wishlist.length})\n            </Link>\n          </div>\n          {/* MovieZone Title */}\n          <div style={{\n            position: 'absolute',\n            top: '30px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            width: '400px',\n            height: '50px',\n            zIndex: 999\n          }}>\n            <TextPressure\n              text=\"MovieZone\"\n              flex={true}\n              alpha={false}\n              stroke={false}\n              width={true}\n              weight={true}\n              italic={true}\n              textColor=\"#ffffff\"\n              strokeColor=\"#ff0000\"\n              minFontSize={36}\n            />\n          </div>\n          <div className=\"search-container\" style={{ marginTop: '80px' }}>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search by movie name...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              onKeyDown={handleKeyDown}\n              className=\"search-input\"\n              autoComplete=\"off\"\n            />\n          </div>\n        </header>\n        <main className=\"main-content\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <div>\n                  <div className=\"filters-container\">\n                    <div className=\"filter-item\">\n                      <label htmlFor=\"actorDirector\">Actor/Director:</label>\n                      <input\n                        type=\"text\"\n                        id=\"actorDirector\"\n                        name=\"actorDirector\"\n                        value={filters.actorDirector}\n                        onChange={handleFilterChange}\n                        onKeyDown={handleKeyDown}\n                        className=\"filter-input\"\n                      />\n                    </div>\n                    <div className=\"filter-item\">\n                      <label htmlFor=\"year\">Year:</label>\n                      <input\n                        type=\"number\"\n                        id=\"year\"\n                        name=\"year\"\n                        value={filters.year}\n                        onChange={handleFilterChange}\n                        onKeyDown={handleKeyDown}\n                        className=\"filter-input\"\n                      />\n                    </div>\n                    <div className=\"filter-item\">\n                      <label htmlFor=\"genre\">Genre:</label>\n                      <input\n                        type=\"text\"\n                        id=\"genre\"\n                        name=\"genre\"\n                        value={filters.genre}\n                        onChange={handleFilterChange}\n                        onKeyDown={handleKeyDown}\n                        className=\"filter-input\"\n                      />\n                    </div>\n                    <div className=\"filter-item\">\n                      <label htmlFor=\"ratings\">Ratings:</label>\n                      <input\n                        type=\"number\"\n                        id=\"ratings\"\n                        name=\"ratings\"\n                        min=\"1\"\n                        max=\"10\"\n                        step=\"0.1\"\n                        value={filters.ratings}\n                        onChange={handleFilterChange}\n                        onKeyDown={handleKeyDown}\n                        className=\"filter-input\"\n                      />\n                    </div>\n                    <button\n                      className=\"suggestion-button\"\n                      onClick={() => {\n                        setShowRecent(false);\n                        fetchFilteredMovies(filters);\n                      }}\n                    >\n                      Give Suggestion\n                    </button>\n                  </div>\n                  <div className=\"movies-display\">\n                    {loading ? (\n                      <p>Loading movies...</p>\n                    ) : error ? (\n                      <p className=\"error-message\">{error}</p>\n                    ) : suggestedMovies.length > 0 ? (\n                      suggestedMovies.map((movie) => (\n                        <MovieTemplate\n                          key={movie.id}\n                          movie={movie}\n                          wishlist={wishlist}\n                          toggleWishlist={toggleWishlist}\n                        />\n                      ))\n                    ) : (\n                      <p className=\"no-results\">No movies to display.</p>\n                    )}\n                  </div>\n                </div>\n              }\n            />\n            <Route\n              path=\"/wishlist\"\n              element={<WishlistPage wishlist={wishlist} toggleWishlist={toggleWishlist} />}\n            />\n            <Route path=\"/movie/:movieId\" element={<MovieDetailPage />} /> {/* New route for movie details */}\n            <Route path=\"/auth\" element={<Auth />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}